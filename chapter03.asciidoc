[[ch03]]
[[intro]]
== Bitcoin Explained

[[ch02_intro]]
=== Blockchain y hashes

En este capitulo hablaremos del blockchain. Y de los hashes.

El blockchain es una base de datos donde se guardan todas las transacciones con bitcoin. Como es una base de datos abierta a la internet cualquiera la podria modificar o jackear. Es por eso que esta base de datos en particular tiene que ser muy dificil de cambiar. Y cuando digo muy dificil de cambiar me refiero para una computadora o para un grupo de computadoras.

Al mismo tiempo tiene que ser publica. Asi que un problema grande que tiene que resolver bitcoin es hacer algo publico y muy dificil de cambiar. Ahora vemos como.

El blockchain esta compuesto por documentos de texto. En su base el documento tiene la siguiente estructura:

----
Hash Bloque: xx2
Hash Anterior: xx1
Nonce: 001
...Transaccion...
...Transaccion...
...
----

Aca hay que hacer un parentesis para comprender que es un hash. Es una funcion que es muy facil calcular en un sentido:

hashValue = f_hash(Texto)

Pero es muy dificil calcular en el sentido inverso. Es decir que es facil calcular el hashValue de un texto cualquiera. Pero es imposible calcular qué texto produciria un valor especifico de un hash. Y en eso se basa el minado, un problema muy tedioso de calcular un hash especifico dado un bloque para agregar al blockchain.

Cada bloque esta ligado al anterior porque cada bloque nuevo referencia al bloque anterior. Anterior acá denomina a la dimension tiempo.

El hash del bloque actual hace referencia al hash del bloque anterior en la cadena. El hash del bloque es el hash de este bloque. Vale notar que si el bloque anterior es cambiado su hash tambien es diferente lo que significa que este bloque tambien tiene que ser recalculado. Y ahi esta la primera virtud (o prestacion) del blockchain. Cambiar un bloque significa cambiar todos los bloques subsiguientes lo cual dependiendo del cambio puede significar muchos.

El segundo hecho es que el hash tiene que comenzar on 0s. Cuantos ceros va a depender de la dificultad que la red designa y ajusta cada 4?? horas.

Acá hay un bloque para lo examinar: https://whatsonchain.com/block-height/635310

Como se ve ese bloque es:

----
0000000000000000005fe4b0f644a39ccf8e8ceac95fc84fa67435e7e969ab44
----

Es asi como se identifica un block con su hash. Ahora tomemos un tiempo para ver que cuando comenzamos a analizar el bloque no sabemos que hash va a tener solo sabemos que tiene que empezar con una serie de ceros que esta dada por la dificultad.

El hash es una variante de los hashes tipicos que son publicos por ahi. Por ejemplo git usa SHA1 para hashear sus bloques. En el caso de bitcoin es una combinacion de hashes. Para entender lo dificil que es encontrar este hash que empieza con ceros hagase la siguiente experiencia:

- Ve a este sitio: https://www.fileformat.info/tool/hash.htm

----
Esto es una prueba - nonce: 00001
----

Al apretar el boton hash. Un numero de hashes aparecen abajo:

----
SHA-1	8141c169888144eafad4c6979cc628532b1c8460
SHA-256	b2d9d3ee828b599e0b1f31c060bccb3c3f9b6e0c77e337d73eace0df59479cc3
----

Ahora incrementese el valor del nonce en el texto de arriba hasta que el hash comience con un cero, o dos, o siete, dependiendo de la dificultad. No voy a esperar que termines o que encuentres el bloque que empiece con 1 cero siquiera. Es una tarea especialmente obtusa pero su principal objetivo es que le cueste mucho a una computadora realizarlo.

De otra manera, encuentrese un texto que de por SHA-1 uno que empiece por ceros. 

Afortunadamente el SHA-1 es una funcion en un sentido. Es decir, es facil calcularla en un sentido Texto -> SHA-1. Es imposible (o muy dificil) en el sentido opuesto SHA-1 -> Texto (nonce). Es decir, dado un hash buscado que texto seria viable para ese hash.

Es entonces la manera mas facil de calcular el hash con el nonce. Es decir vamos incrementando el nonce hasta que el hash resultante empieza con la cantidad requerida de ceros. 

Verificar un SHA-1 es una cuestion trivial una vez que el nonce es conocido. Es decir una vez que tenemos el bloque entero es trivial calcular el hash y verificar que empieza con n ceros.

Donde digo SHA-1 es en realidad una amalgama de otros hashes y combinacion de varios en realidad. Los hashes son entidades usadas para criptografia asi que tienen usos mas importantes que el bitcoin. Son al mismo tiempo constantemente atacadas para encontrar debilidades. Por eso la idea es combinar varios hashes por si uno de ellos es debil no es el unico en utilizacion.